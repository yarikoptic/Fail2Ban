Issue {issueClosedAt = Nothing, issueUpdatedAt = GithubDate {fromGithubDate = 2013-02-17 01:26:25 UTC}, issueHtmlUrl = "https://github.com/fail2ban/fail2ban/issues/103", issueClosedBy = Nothing, issueLabels = [], issueNumber = 103, issueAssignee = Nothing, issueUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/004e831787204c4a5be80c5f55227764?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "grooverdan", githubOwnerUrl = "https://api.github.com/users/grooverdan", githubOwnerId = 462287, githubOwnerGravatarId = "004e831787204c4a5be80c5f55227764"}, issueTitle = "testcases failing on git master branch", issuePullRequest = PullRequestReference {pullRequestReferenceHtmlUrl = Nothing, pullRequestReferencePatchUrl = Nothing, pullRequestReferenceDiffUrl = Nothing}, issueUrl = "https://api.github.com/repos/fail2ban/fail2ban/issues/103", issueCreatedAt = GithubDate {fromGithubDate = 2013-01-01 23:05:12 UTC}, issueBody = "\r\n./fail2ban-testcases  -l debug 'MonitorFailures' > /tmp/master.log\r\nMonitorFailures<class 'server.filterpoll.FilterPoll'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filterpoll.FilterPoll'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filterpoll.FilterPoll'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filterpoll.FilterPoll'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filterpoll.FilterPoll'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filtergamin.FilterGamin'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filtergamin.FilterGamin'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filtergamin.FilterGamin'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filtergamin.FilterGamin'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filtergamin.FilterGamin'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(tempfile) ... ok\r\nMonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(tempfile) ... FAIL\r\nMonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(tempfile) ... ok\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filterpoll.FilterPoll'>(/tmp/monitorfailurespeVW1nfail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 489, in test_delLogPath\r\n    self.assert_correct_last_attempt(GetFailures.FAILURES_01)#, count=9)\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 382, in assert_correct_last_attempt\r\n    self.assertTrue(self.isFilled(10)) # give Filter a chance to react\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filterpoll.FilterPoll'>(/tmp/monitorfailures6uPdGqfail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 436, in test_move_file\r\n    self.assertEqual(self.filter.failManager.getFailTotal(), 2) # Fails with Poll from time to time\r\nAssertionError: 0 != 2\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filtergamin.FilterGamin'>(/tmp/monitorfailuresbApMgnfail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 436, in test_move_file\r\n    self.assertEqual(self.filter.failManager.getFailTotal(), 2) # Fails with Poll from time to time\r\nAssertionError: 0 != 2\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filtergamin.FilterGamin'>(/tmp/monitorfailuresl6lz7Ufail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 459, in test_new_bogus_file\r\n    self.assert_correct_last_attempt(GetFailures.FAILURES_01)\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 382, in assert_correct_last_attempt\r\n    self.assertTrue(self.isFilled(10)) # give Filter a chance to react\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(/tmp/monitorfailuresd_jVkhfail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 398, in test_grow_file\r\n    self.assertTrue(self.isFilled(6))\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: MonitorFailures<class 'server.filterpyinotify.FilterPyinotify'>(/tmp/monitorfailuresBf2Ghwfail2ban)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 459, in test_new_bogus_file\r\n    self.assert_correct_last_attempt(GetFailures.FAILURES_01)\r\n  File \"/home/dan/software_projects/fail2ban/testcases/filtertestcase.py\", line 382, in assert_correct_last_attempt\r\n    self.assertTrue(self.isFilled(10)) # give Filter a chance to react\r\nAssertionError: False is not true\r\n\r\n----------------------------------------------------------------------\r\nRan 15 tests in 128.786s\r\n\r\nFAILED (failures=6)\r\n", issueState = "open", issueId = 9607042, issueComments = 7, issueMilestone = Nothing}