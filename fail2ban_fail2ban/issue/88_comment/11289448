IssueComment {issueCommentUpdatedAt = GithubDate {fromGithubDate = 2012-12-12 14:50:54 UTC}, issueCommentUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/004e831787204c4a5be80c5f55227764?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "grooverdan", githubOwnerUrl = "https://api.github.com/users/grooverdan", githubOwnerId = 462287, githubOwnerGravatarId = "004e831787204c4a5be80c5f55227764"}, issueCommentUrl = "https://api.github.com/repos/fail2ban/fail2ban/issues/comments/11289448", issueCommentCreatedAt = GithubDate {fromGithubDate = 2012-12-12 13:56:01 UTC}, issueCommentBody = "as an alternate I've done a very crude hack: https://github.com/grooverdan/fail2ban/commit/614b1648170fc47d4b16b56c0a1d3f29cda8158f . I don't know if it even works and test cases would undoubtly show up more of my mistakes.\r\n\r\nRather than a crude regex match on the command line I've put the address family throughout most of the code. The address family is matches from the logs and checked to see its family once. I've added ip4 and ip6 tags to the actions. I've made the command filter out those that don't have a tag. So if an IPv6 address is match a ip6 in the logs and not ip4, ```<ip6>``` is set but not ```<ip4>```. Therefore the following action will only execute the one command relevant to the address family:\r\n\r\n```\r\nActionBan = iptables  -I fail2ban-<name> 1 -s <ip4> -j DROP\r\n                    ip6tables -I fail2ban-<name> 1 -s <ip6> -j DROP\r\n```\r\nIt make it also friendly for other address family specific commands (like ipsets :-) ). Its more explicit in what it does. <ip> contains either family of address though to be friendly to existing rules a new identifier <ip46>? could be used. This also works friendly when items like <user> are missing from the regex pattern.\r\n\r\nThoughts? should I continue?", issueCommentId = 11289448}