IssueComment {issueCommentUpdatedAt = GithubDate {fromGithubDate = 2013-01-02 05:44:49 UTC}, issueCommentUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/004e831787204c4a5be80c5f55227764?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "grooverdan", githubOwnerUrl = "https://api.github.com/users/grooverdan", githubOwnerId = 462287, githubOwnerGravatarId = "004e831787204c4a5be80c5f55227764"}, issueCommentUrl = "https://api.github.com/repos/fail2ban/fail2ban/issues/comments/11800620", issueCommentCreatedAt = GithubDate {fromGithubDate = 2013-01-02 05:44:10 UTC}, issueCommentBody = "The following works about 2 times in every 3. The 1 in 3 is the get_monitor_failures_testcase will fail on one of the Filter* backends\r\n\r\n<pre>\r\n--- a/testcases/filtertestcase.py\r\n+++ b/testcases/filtertestcase.py\r\n@@ -379,7 +379,7 @@ def get_monitor_failures_testcase(Filter_):\r\n                        return not self.isFilled(delay)\r\n \r\n                def assert_correct_last_attempt(self, failures, count=None):\r\n-                       self.assertTrue(self.isFilled(10)) # give Filter a chance to react\r\n+                       self.assertTrue(self.isFilled(20)) # give Filter a chance to react\r\n                        _assert_correct_last_attempt(self, self.jail, failures, count=count)\r\n \r\n \r\n@@ -395,7 +395,7 @@ def get_monitor_failures_testcase(Filter_):\r\n                        # since it should have not been enough\r\n \r\n                        _copy_lines_between_files(GetFailures.FILENAME_01, self.file, skip=5)\r\n-                       self.assertTrue(self.isFilled(6))\r\n+                       self.assertTrue(self.isFilled(20))\r\n                        # so we sleep for up to 2 sec for it not to become empty,\r\n                        # and meanwhile pass to other thread(s) and filter should\r\n                        # have gathered new failures and passed them into the\r\n@@ -431,7 +431,7 @@ def get_monitor_failures_testcase(Filter_):\r\n                        # if we move file into a new location while it has been open already\r\n                        self.file = _copy_lines_between_files(GetFailures.FILENAME_01, self.name,\r\n                                                                                                  n=14, mode='w')\r\n-                       self.assertTrue(self.isEmpty(2))\r\n+                       self.assertTrue(self.isEmpty(5))\r\n                        self.assertRaises(FailManagerEmpty, self.filter.failManager.toBan)\r\n                        self.assertEqual(self.filter.failManager.getFailTotal(), 2) # Fails with Poll from time to time\r\n</pre>\r\n\r\nQuad Code i5 laptop with no other tasks.", issueCommentId = 11800620}